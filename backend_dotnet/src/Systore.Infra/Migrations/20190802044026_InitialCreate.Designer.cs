// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Systore.Infra.Context;

namespace Systore.Infra.Migrations
{
    [DbContext(typeof(SystoreContext))]
    [Migration("20190802044026_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Systore.Domain.Entities.BillReceive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<int>("Code");

                    b.Property<int>("DaysDelay");

                    b.Property<DateTime>("DueDate");

                    b.Property<decimal>("FinalValue")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("OriginalValue")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<DateTime?>("PayDate");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<short>("Quota")
                        .HasColumnType("SMALLINT");

                    b.Property<sbyte>("Situation")
                        .HasColumnType("TINYINT");

                    b.Property<string>("Vendor")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Code", "Quota")
                        .IsUnique();

                    b.ToTable("BillReceive");
                });

            modelBuilder.Entity("Systore.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(150);

                    b.Property<string>("AddressNumber")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("AdmissionDate");

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<sbyte>("CivilStatus")
                        .HasColumnType("TINYINT");

                    b.Property<string>("Complement")
                        .HasMaxLength(50);

                    b.Property<string>("Cpf")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("FatherName")
                        .HasMaxLength(150);

                    b.Property<string>("JobName")
                        .HasMaxLength(50);

                    b.Property<string>("MotherName")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<string>("Neighborhood")
                        .HasMaxLength(50);

                    b.Property<string>("Note");

                    b.Property<string>("Occupation")
                        .HasMaxLength(50);

                    b.Property<string>("Phone1")
                        .HasMaxLength(20);

                    b.Property<string>("Phone2")
                        .HasMaxLength(20);

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(50);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("RegistryDate");

                    b.Property<string>("Rg")
                        .HasMaxLength(20);

                    b.Property<string>("Seller")
                        .HasMaxLength(30);

                    b.Property<string>("Spouse")
                        .HasMaxLength(150);

                    b.Property<string>("State")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Systore.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("ExpirationDays")
                        .HasColumnType("SMALLINT");

                    b.Property<string>("FirstDescription")
                        .HasMaxLength(30);

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<sbyte>("PrintDateOfPackaging")
                        .HasColumnType("TINYINT");

                    b.Property<bool>("PrintExpirationDate");

                    b.Property<sbyte>("SaleType")
                        .HasColumnType("TINYINT");

                    b.Property<string>("SecondDescription")
                        .HasMaxLength(30);

                    b.Property<string>("ThirdDescription")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Systore.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<sbyte>("Admin")
                        .HasColumnType("TINYINT");

                    b.Property<string>("Password")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admin = (sbyte)1,
                            Password = "Senha123",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Admin = (sbyte)1,
                            Password = "1234",
                            UserName = "ROSE"
                        },
                        new
                        {
                            Id = 3,
                            Admin = (sbyte)1,
                            Password = "1234",
                            UserName = "IZAQUE"
                        });
                });

            modelBuilder.Entity("Systore.Domain.Entities.BillReceive", b =>
                {
                    b.HasOne("Systore.Domain.Entities.Client", "Client")
                        .WithMany("BillReceives")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
